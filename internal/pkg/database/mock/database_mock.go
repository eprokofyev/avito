// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/database/database.go

// Package mock is a generated GoMock package.
package mock

import (
	models "avito/internal/pkg/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDatabase is a mock of IDatabase interface
type MockIDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockIDatabaseMockRecorder
}

// MockIDatabaseMockRecorder is the mock recorder for MockIDatabase
type MockIDatabaseMockRecorder struct {
	mock *MockIDatabase
}

// NewMockIDatabase creates a new mock instance
func NewMockIDatabase(ctrl *gomock.Controller) *MockIDatabase {
	mock := &MockIDatabase{ctrl: ctrl}
	mock.recorder = &MockIDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDatabase) EXPECT() *MockIDatabaseMockRecorder {
	return m.recorder
}

// Transfer mocks base method
func (m *MockIDatabase) Transfer(arg0 *models.Transfer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transfer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Transfer indicates an expected call of Transfer
func (mr *MockIDatabaseMockRecorder) Transfer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transfer", reflect.TypeOf((*MockIDatabase)(nil).Transfer), arg0)
}

// GetBalance mocks base method
func (m *MockIDatabase) GetBalance(arg0 uint) (*models.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", arg0)
	ret0, _ := ret[0].(*models.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance
func (mr *MockIDatabaseMockRecorder) GetBalance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockIDatabase)(nil).GetBalance), arg0)
}

// GetListTransfer mocks base method
func (m *MockIDatabase) GetListTransfer(id uint, sort, order string, limit, offset int) (models.TransferList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListTransfer", id, sort, order, limit, offset)
	ret0, _ := ret[0].(models.TransferList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListTransfer indicates an expected call of GetListTransfer
func (mr *MockIDatabaseMockRecorder) GetListTransfer(id, sort, order, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListTransfer", reflect.TypeOf((*MockIDatabase)(nil).GetListTransfer), id, sort, order, limit, offset)
}
